set_options(height = 700, width = 1500) %>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%") %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left")))
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~reorder(name, me_miss),
y = ~n_of_miss,
key := ~id) %>%
layer_points(size := 40,
opacity := .3) %>%
add_tooltip(all_values)%>%
set_options(height = 700, width = 1500) %>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%") %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left")))
data %>%
group_by(reporter) %>%
summarize(miss = sum(no_quant) / n()) %>%
filter(miss > 0) %>%
ggplot(aes(reorder(reporter, miss), miss)) +
geom_bar(stat = "identity") + coord_flip()
data %>%
group_by(reporter) %>%
summarize(miss = sum(no_quant) / n()) %>%
filter(miss > 0) %>%
ggvis(x = ~miss, y = ~reorder(reporter, desc(miss))) %>%
layer_points() %>%
add_tooltip(function(d) paste0(d[[2]],
": ",
scales::percent(d$miss))) %>%
set_options(height = 700, width = 480) %>%
add_axis("x", title = "", format = "%") %>%
add_axis("y", title = "")
source('~/r_adhoc/trade_prevalid_testing/comtrade_prevalidation/prepare_data_tariffline_missings.R')
?row_number
getwd()
source('~/r_adhoc/trade_prevalid_testing/comtrade_prevalidation/prepare_data_tariffline_missings.R')
head(hs2_miss)
hs2_miss <- data %>%
group_by(name, hs2) %>%
summarize(n_of_miss = sum(no_quant) / n()) %>%
group_by(name) %>%
mutate(me_miss_reporter = median(n_of_miss),
max_miss_reporter = max(n_of_miss)) %>%
ungroup() %>%
mutate(id = row_number())
saveRDS(hs2_miss,
file.path(Sys.getenv("HOME"),
"r_adhoc",
"trade_prevalid_testing",
"comtrade_prevalidation",
"tariffline_hs2_missing_quant.Rds"))
library(shiny)
shiny::runApp('comtrade_prevalidation')
uppressPackageStartupMessages(library(dplyr))
library(ggplot2)
library(ggvis)
source(file.path(Sys.getenv("HOME"), "r_adhoc", "trade_prevalid_testing", "setupconnection.R"))
subdir <- "OrangeBook"
sourcedir <- "tradeR"
if(length(lapply(dir(file.path(Sys.getenv("HOME"), "r_adhoc", "privateFAO", subdir, sourcedir),
full.names = T),
source)) == 0) stop("Files for sourcing not found")
trade_src <- src_postgres("sws_data", "localhost", 5432, "trade", .pwd,
options = "-c search_path=ess")
suppressPackageStartupMessages(library(dplyr))
missingIndicator <- function(indicator, missingCases) {
indicator %in% missingCases
}
data_db <- tbl(trade_src, sql("
select * from ess.agri
"))
data <- data_db %>%
filter(year == "2011") %>%
collect() %>%
mutate(no_quant = missingIndicator(weight, NA) &
missingIndicator(qty, NA)) %>%
left_join(getComtradeM49(), by = c("reporter" = "code"))
hs2_miss <- data %>%
group_by(name, hs2) %>%
summarize(n_of_miss = sum(no_quant) / n()) %>%
group_by(name) %>%
mutate(me_miss = median(n_of_miss)) %>%
ungroup() %>%
mutate(id = seq_len(n()))
head(hs2_miss)
ms2_miss %>%
ggvis(x = ~name, y = ~n_of_miss, color = ~hs2) %>%
layer_lines()
hs2_miss %>%
ggvis(x = ~name, y = ~n_of_miss, color = ~hs2) %>%
layer_lines()
hs2_miss %>%
ggvis(x = ~name, y = ~n_of_miss, stroke = ~hs2) %>%
layer_lines()
hs2_miss %>%
ggvis(x = ~reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
library(dplyr)
hs2_miss %>%
ggvis(x = ~reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
??reorder
hs2_miss %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
hs2_miss %>%
filter(max_miss > 0) %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
library(dygraph)
library(dygraphs)
?dygraph
library(shiny)
?isolate
sd(1)
sd(1:2)
sd(1:1)
1:1
sd(rep(1, 10))
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(y = ~stats::reorder(name, me_miss),
x = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%") %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left")))
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left")))
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2, fill = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left")))
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left"))) %>%
hide_legend(stroke)
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left"))) %>%
hide_legend("stroke")
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~as.character(stats::reorder(name, me_miss)),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left"))) %>%
hide_legend("stroke")
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss),
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 90,
align = "left",
baseline = "left"))) %>%
hide_legend("stroke")
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss), # After reorder we gett warning about levels
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 270,
align = "left",
baseline = "left"))) %>%
hide_legend("stroke") %>%
set_options(height = 500, width = 1000)
hs2_miss %>%
group_by(name) %>%
mutate(max_miss = max(n_of_miss)) %>%
filter(max_miss > 0) %>%
ungroup() %>%
ggvis(x = ~stats::reorder(name, me_miss), # After reorder we gett warning about levels
y = ~n_of_miss,
stroke = ~hs2) %>%
layer_lines()%>%
add_axis("y",
title = "Share of trade flows with missing quantity",
format = "%",
title_offset = 50) %>%
add_axis("x", title = "",
properties = axis_props(
labels = list(angle = 270,
align = "right",
baseline = "left"))) %>%
hide_legend("stroke") %>%
set_options(height = 500, width = 1000)
data %>%
group_by(reporter) %>%
summarize(miss = sum(no_quant) / n()) %>%
filter(miss > 0) %>%
ggvis(x = ~miss, y = ~reorder(reporter, desc(miss))) %>%
layer_points() %>%
add_tooltip(function(d) paste0(d[[2]],
": ",
scales::percent(d$miss))) %>%
set_options(height = 700, width = 480) %>%
add_axis("x", title = "", format = "%") %>%
add_axis("y", title = "")
1/0
0/0
suppressPackageStartupMessages(library(dplyr))
source(file.path(Sys.getenv("HOME"), "r_adhoc", "trade_prevalid_testing", "setupconnection.R"))
subdir <- "OrangeBook"
sourcedir <- "tradeR"
if(length(lapply(dir(file.path(Sys.getenv("HOME"), "r_adhoc", "privateFAO", subdir, sourcedir),
full.names = T),
source)) == 0) stop("Files for sourcing not found")
trade_src <- src_postgres("sws_data", "localhost", 5432, "trade", .pwd,
options = "-c search_path=ess")
missingIndicator <- function(indicator, missingCases) {
indicator %in% missingCases
}
data_db <- tbl(trade_src, sql("
select * from ess.agri
"))
data <- data_db %>%
filter(year == "2011") %>%
collect() %>%
mutate(no_quant = missingIndicator(weight, NA) &
missingIndicator(qty, NA)) %>%
left_join(getComtradeM49(), by = c("reporter" = "code"))
data %>% filter(name == "Viet Nam", hs2 == "40")
0/100
data %>% filter(name == "Viet Nam", hs2 == "40") %>% summarize(n_of_miss = sum(no_quant) /n())
scales::percent(0)
?scales::percent(0)
?scales::percent
0*100
scales::percent
round_any(0, precision(0)/100)
??round_any
plyr::round_any(135, 10)
plyr::round_any(135, 25)
??precision
scales:::precision
scales:::precision(0)
scales:::precision(0)/100
plyr::round_any(0, scales:::precision(0)/100)
plyr::round_any
round(0/0 * 0)
round(0/0)
0/0
shiny::runApp('comtrade_prevalidation')
head(data)
table(data$qunit)
table(data$qunit[is.na(data$weight)])
sum(is.na(data$weight))/nrow(data)
a <- c(1,1,1,1, NA, NA)
b <- c(2,2,2,2, 2, NA)
ifelse(is.na(a), b, NA)
ifelse(!is.na(a), a, b)
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(uv_rep = median(uv, na.rm = T)) %>%
ungroup() %>%
mutate(uv_diff_prop = abs((uv - uv_rep) / uv)) %>%
group_by(name) %>%
summarize(uv_diff_prop = median(uv_diff_prop, na.rm = T)) %>%
ggvis(x = ~uv_diff_prop,
y = ~name) %>%
layer_points()
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(uv_rep = median(uv, na.rm = T)) %>%
ungroup() %>%
mutate(uv_diff_prop = abs((uv - uv_rep) / uv)) %>%
group_by(name) %>%
summarize(uv_diff_prop = median(uv_diff_prop, na.rm = T)) %>%
ggvis(x = ~uv_diff_prop,
y = ~stats::reorder(name, uv_diff_prop)) %>%
layer_points()
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(uv_rep = median(uv, na.rm = T)) %>%
ungroup() %>%
mutate(uv_diff_prop = abs((uv - uv_rep) / uv)) %>%
group_by(name) %>%
summarize(uv_diff_prop = median(uv_diff_prop, na.rm = T)) %>%
ggvis(x = ~uv_diff_prop,
y = ~stats::reorder(name, desc(uv_diff_prop))) %>%
layer_points()
cume_dist(c(1, 1, 5, 5, 5, 10))
cume_dist(c(1, 1, 50, 50, 50, 100))
?cume_dist
?IQR
IQR(c(1, 1, 50, 50, 50, 100))
quantile(c(1, 1, 50, 50, 50, 100))
quantile(c(1, 1, 50, 50, 50, 100), .1)
quantile(c(1, 1, 50, 50, 50, 100), .9)
quantile(c(1, 50, 50, 50, 100), .9)
quantile(c(1, 50, 50, 50, 100), .1)
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(out_range = cume_dist(uv) < inter_range | cume_dist(uv) > 1 - inter_range) %>%
group_by(name) %>%
summarize(prop_of_outs = sum(out_range) / n()) %>%
ggvis(x = ~prop_of_outs,
y = ~stats::reorder(name, desc(prop_of_outs))) %>%
layer_points()
inter_range <- .1
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(out_range = cume_dist(uv) < inter_range | cume_dist(uv) > 1 - inter_range) %>%
group_by(name) %>%
summarize(prop_of_outs = sum(out_range) / n()) %>%
ggvis(x = ~prop_of_outs,
y = ~stats::reorder(name, desc(prop_of_outs))) %>%
layer_points()
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(out_range = cume_dist(uv) < inter_range | cume_dist(uv) > 1 - inter_range) %>%
group_by(name) %>%
summarize(prop_of_outs = sum(out_range) / n()) %>%
filter(prop_of_outs > 0) %>%
ggvis(x = ~prop_of_outs,
y = ~stats::reorder(name, desc(prop_of_outs))) %>%
layer_points()
data %>%
mutate(
qty_all = ifelse(!is.na(weight), weight, qty),
uv = value / qty_all) %>%
select(-qty_all) %>%
group_by(reporter, hs) %>%
mutate(out_range = cume_dist(uv) < inter_range | cume_dist(uv) > 1 - inter_range) %>%
group_by(name) %>%
summarize(prop_of_outs = sum(out_range) / n()) %>%
filter(prop_of_outs > 0) %>%
ggvis(x = ~prop_of_outs,
y = ~stats::reorder(name, desc(prop_of_outs))) %>%
layer_points() %>%
add_axis("x",
title = "Share of trade flows with UV-outliers",
format = "%",
title_offset = 50) %>%
add_axis("y", title = "") %>%
set_options(height = 800, width = 500)
